// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/chess.proto

package chesspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientIp      string                 `protobuf:"bytes,1,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	ClientPort    int32                  `protobuf:"varint,2,opt,name=client_port,json=clientPort,proto3" json:"client_port,omitempty"`
	CallbackUrl   string                 `protobuf:"bytes,3,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
	Game          string                 `protobuf:"bytes,4,opt,name=game,proto3" json:"game,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindGameRequest) Reset() {
	*x = FindGameRequest{}
	mi := &file_proto_chess_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindGameRequest) ProtoMessage() {}

func (x *FindGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindGameRequest.ProtoReflect.Descriptor instead.
func (*FindGameRequest) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{0}
}

func (x *FindGameRequest) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *FindGameRequest) GetClientPort() int32 {
	if x != nil {
		return x.ClientPort
	}
	return 0
}

func (x *FindGameRequest) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *FindGameRequest) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

type FindGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Color         string                 `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	ServerIp      string                 `protobuf:"bytes,3,opt,name=server_ip,json=serverIp,proto3" json:"server_ip,omitempty"`
	ServerPort    int32                  `protobuf:"varint,4,opt,name=server_port,json=serverPort,proto3" json:"server_port,omitempty"`
	Game          string                 `protobuf:"bytes,5,opt,name=game,proto3" json:"game,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindGameResponse) Reset() {
	*x = FindGameResponse{}
	mi := &file_proto_chess_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindGameResponse) ProtoMessage() {}

func (x *FindGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindGameResponse.ProtoReflect.Descriptor instead.
func (*FindGameResponse) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{1}
}

func (x *FindGameResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FindGameResponse) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *FindGameResponse) GetServerIp() string {
	if x != nil {
		return x.ServerIp
	}
	return ""
}

func (x *FindGameResponse) GetServerPort() int32 {
	if x != nil {
		return x.ServerPort
	}
	return 0
}

func (x *FindGameResponse) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

type MoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientIp      string                 `protobuf:"bytes,1,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	ClientPort    int32                  `protobuf:"varint,2,opt,name=client_port,json=clientPort,proto3" json:"client_port,omitempty"`
	Move          string                 `protobuf:"bytes,3,opt,name=move,proto3" json:"move,omitempty"`
	Color         string                 `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveRequest) Reset() {
	*x = MoveRequest{}
	mi := &file_proto_chess_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRequest) ProtoMessage() {}

func (x *MoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRequest.ProtoReflect.Descriptor instead.
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{2}
}

func (x *MoveRequest) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *MoveRequest) GetClientPort() int32 {
	if x != nil {
		return x.ClientPort
	}
	return 0
}

func (x *MoveRequest) GetMove() string {
	if x != nil {
		return x.Move
	}
	return ""
}

func (x *MoveRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type MoveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Game          string                 `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveResponse) Reset() {
	*x = MoveResponse{}
	mi := &file_proto_chess_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveResponse) ProtoMessage() {}

func (x *MoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveResponse.ProtoReflect.Descriptor instead.
func (*MoveResponse) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{3}
}

func (x *MoveResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MoveResponse) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

type ForfeitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientIp      string                 `protobuf:"bytes,1,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	ClientPort    int32                  `protobuf:"varint,2,opt,name=client_port,json=clientPort,proto3" json:"client_port,omitempty"`
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForfeitRequest) Reset() {
	*x = ForfeitRequest{}
	mi := &file_proto_chess_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForfeitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForfeitRequest) ProtoMessage() {}

func (x *ForfeitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForfeitRequest.ProtoReflect.Descriptor instead.
func (*ForfeitRequest) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{4}
}

func (x *ForfeitRequest) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *ForfeitRequest) GetClientPort() int32 {
	if x != nil {
		return x.ClientPort
	}
	return 0
}

func (x *ForfeitRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type ForfeitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForfeitResponse) Reset() {
	*x = ForfeitResponse{}
	mi := &file_proto_chess_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForfeitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForfeitResponse) ProtoMessage() {}

func (x *ForfeitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForfeitResponse.ProtoReflect.Descriptor instead.
func (*ForfeitResponse) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{5}
}

func (x *ForfeitResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ForfeitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BoardUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Board         string                 `protobuf:"bytes,2,opt,name=board,proto3" json:"board,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoardUpdateRequest) Reset() {
	*x = BoardUpdateRequest{}
	mi := &file_proto_chess_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoardUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardUpdateRequest) ProtoMessage() {}

func (x *BoardUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardUpdateRequest.ProtoReflect.Descriptor instead.
func (*BoardUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{6}
}

func (x *BoardUpdateRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BoardUpdateRequest) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

type BoardUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoardUpdateResponse) Reset() {
	*x = BoardUpdateResponse{}
	mi := &file_proto_chess_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoardUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardUpdateResponse) ProtoMessage() {}

func (x *BoardUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardUpdateResponse.ProtoReflect.Descriptor instead.
func (*BoardUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{7}
}

func (x *BoardUpdateResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_proto_chess_proto protoreflect.FileDescriptor

const file_proto_chess_proto_rawDesc = "" +
	"\n" +
	"\x11proto/chess.proto\x12\x05chess\"\x86\x01\n" +
	"\x0fFindGameRequest\x12\x1b\n" +
	"\tclient_ip\x18\x01 \x01(\tR\bclientIp\x12\x1f\n" +
	"\vclient_port\x18\x02 \x01(\x05R\n" +
	"clientPort\x12!\n" +
	"\fcallback_url\x18\x03 \x01(\tR\vcallbackUrl\x12\x12\n" +
	"\x04game\x18\x04 \x01(\tR\x04game\"\x92\x01\n" +
	"\x10FindGameResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x14\n" +
	"\x05color\x18\x02 \x01(\tR\x05color\x12\x1b\n" +
	"\tserver_ip\x18\x03 \x01(\tR\bserverIp\x12\x1f\n" +
	"\vserver_port\x18\x04 \x01(\x05R\n" +
	"serverPort\x12\x12\n" +
	"\x04game\x18\x05 \x01(\tR\x04game\"u\n" +
	"\vMoveRequest\x12\x1b\n" +
	"\tclient_ip\x18\x01 \x01(\tR\bclientIp\x12\x1f\n" +
	"\vclient_port\x18\x02 \x01(\x05R\n" +
	"clientPort\x12\x12\n" +
	"\x04move\x18\x03 \x01(\tR\x04move\x12\x14\n" +
	"\x05color\x18\x04 \x01(\tR\x05color\":\n" +
	"\fMoveResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x12\n" +
	"\x04game\x18\x02 \x01(\tR\x04game\"d\n" +
	"\x0eForfeitRequest\x12\x1b\n" +
	"\tclient_ip\x18\x01 \x01(\tR\bclientIp\x12\x1f\n" +
	"\vclient_port\x18\x02 \x01(\x05R\n" +
	"clientPort\x12\x14\n" +
	"\x05color\x18\x03 \x01(\tR\x05color\"C\n" +
	"\x0fForfeitResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"D\n" +
	"\x12BoardUpdateRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x14\n" +
	"\x05board\x18\x02 \x01(\tR\x05board\"-\n" +
	"\x13BoardUpdateResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2\xb6\x01\n" +
	"\fChessService\x12;\n" +
	"\bFindGame\x12\x16.chess.FindGameRequest\x1a\x17.chess.FindGameResponse\x12/\n" +
	"\x04Move\x12\x12.chess.MoveRequest\x1a\x13.chess.MoveResponse\x128\n" +
	"\aForfeit\x12\x15.chess.ForfeitRequest\x1a\x16.chess.ForfeitResponse2V\n" +
	"\x0eClientCallback\x12D\n" +
	"\vBoardUpdate\x12\x19.chess.BoardUpdateRequest\x1a\x1a.chess.BoardUpdateResponseB\x0fZ\rproto/chesspbb\x06proto3"

var (
	file_proto_chess_proto_rawDescOnce sync.Once
	file_proto_chess_proto_rawDescData []byte
)

func file_proto_chess_proto_rawDescGZIP() []byte {
	file_proto_chess_proto_rawDescOnce.Do(func() {
		file_proto_chess_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_chess_proto_rawDesc), len(file_proto_chess_proto_rawDesc)))
	})
	return file_proto_chess_proto_rawDescData
}

var file_proto_chess_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_chess_proto_goTypes = []any{
	(*FindGameRequest)(nil),     // 0: chess.FindGameRequest
	(*FindGameResponse)(nil),    // 1: chess.FindGameResponse
	(*MoveRequest)(nil),         // 2: chess.MoveRequest
	(*MoveResponse)(nil),        // 3: chess.MoveResponse
	(*ForfeitRequest)(nil),      // 4: chess.ForfeitRequest
	(*ForfeitResponse)(nil),     // 5: chess.ForfeitResponse
	(*BoardUpdateRequest)(nil),  // 6: chess.BoardUpdateRequest
	(*BoardUpdateResponse)(nil), // 7: chess.BoardUpdateResponse
}
var file_proto_chess_proto_depIdxs = []int32{
	0, // 0: chess.ChessService.FindGame:input_type -> chess.FindGameRequest
	2, // 1: chess.ChessService.Move:input_type -> chess.MoveRequest
	4, // 2: chess.ChessService.Forfeit:input_type -> chess.ForfeitRequest
	6, // 3: chess.ClientCallback.BoardUpdate:input_type -> chess.BoardUpdateRequest
	1, // 4: chess.ChessService.FindGame:output_type -> chess.FindGameResponse
	3, // 5: chess.ChessService.Move:output_type -> chess.MoveResponse
	5, // 6: chess.ChessService.Forfeit:output_type -> chess.ForfeitResponse
	7, // 7: chess.ClientCallback.BoardUpdate:output_type -> chess.BoardUpdateResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_chess_proto_init() }
func file_proto_chess_proto_init() {
	if File_proto_chess_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_chess_proto_rawDesc), len(file_proto_chess_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_chess_proto_goTypes,
		DependencyIndexes: file_proto_chess_proto_depIdxs,
		MessageInfos:      file_proto_chess_proto_msgTypes,
	}.Build()
	File_proto_chess_proto = out.File
	file_proto_chess_proto_goTypes = nil
	file_proto_chess_proto_depIdxs = nil
}
